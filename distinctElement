class Solution {
    ArrayList<Integer> countDistinct(int arr[], int k) {
    
        ArrayList<Integer> ans = new ArrayList<>();
        HashMap<Integer,Integer> freq = new HashMap<>();
        
        int dc =0;
        
        for(int i=0;i<k;i++){
             freq.put(arr[i],freq.getOrDefault(arr[i],0)+1);
             if(freq.get(arr[i])==1) dc++; 
        }
        ans.add(dc);
        
        for(int i=k ;i<arr.length;i++){
            int out = arr[i-k];
             freq.put(out,freq.get(out)-1);
              if(freq.get(out)==0) dc--; 
              
               freq.put(arr[i],freq.getOrDefault(arr[i],0)+1);
                if(freq.get(arr[i])==1) dc++; 
                
                 ans.add(dc);
        }
        return ans;
        
// This is also a optimal approach
        // int j=0;
        
        // for(int i=0;i<arr.length;i++){
        //     freq.put(arr[i],freq.getOrDefault(arr[i],0)+1);
            
        //     if(i>=k-1){
        //         ans.add(freq.size());
        //         freq.put(arr[j],freq.get(arr[j])-1);
        //         if(freq.get(arr[j])==0) freq.remove(arr[j]);
        //         j++;
        //     }
        // }
        
        // return ans;
        
        
    }
}
