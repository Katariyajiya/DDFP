import java.util.Arrays;

public class Day41 {

    public static void main(String[] args) {
        int[] arr={12, 0};
        System.out.println(productExceptSelf(arr));
        System.out.println(productExceptSelfOptimal(arr));
    }
    //BRUTEFORCE APPROACH
    public static int[] productExceptSelf(int arr[]) {
        // code here
      int[] res =new int[arr.length];
      int temp=1;


      for(int i=0;i< arr.length;i++){
          for (int j=0;j< arr.length;j++){
              if (j!=i) temp*=arr[j];
              else continue;
          }
          res[i]=temp;
          temp=1;
      }
        System.out.println(Arrays.toString(res));
      return res;
    }

    //OPTIMAL APPROACH
        public static int[] productExceptSelfOptimal(int[] arr) {
            int[] left = new int[arr.length];
            left[0]=1;
            for(int i=1;i<arr.length;i++){
                left[i]=left[i-1]*arr[i-1];
            }


            int[] right = new int[arr.length];
            right[arr.length-1]=1;
            for(int i=arr.length-2;i>-1;i--){
                right[i]=right[i+1]*arr[i+1];
            }

            int[] ans = new int[arr.length];
            for(int i=0;i<arr.length;i++){
                ans[i]=right[i]*left[i];
            }

            return ans;
        }
    
}
